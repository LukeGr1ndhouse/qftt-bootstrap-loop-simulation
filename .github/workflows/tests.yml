name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11']
        include:
          - os: macos-latest
            python-version: '3.10'
          - os: windows-latest
            python-version: '3.10'

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -e .
    
    - name: Run tests with coverage
      run: |
        pytest tests/ --cov=src --cov-report=xml --cov-report=term
    
    - name: Upload coverage to Codecov
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.10'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
    
    - name: Run validation checks
      run: |
        python -c "from src.qftt_simulator import QFTTSimulator; sim = QFTTSimulator(); print('Initial energy check:', abs(sim.initial_energy) < 1e-6)"
    
    - name: Test scripts
      run: |
        python scripts/run_simulation.py --max_events 10 --quiet
        
  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install linting tools
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort
    
    - name: Run flake8
      run: flake8 src/ tests/ scripts/ --max-line-length=100 --ignore=E203,W503
      continue-on-error: true
    
    - name: Check code formatting with black
      run: black --check src/ tests/ scripts/
      continue-on-error: true
    
    - name: Check import sorting
      run: isort --check-only src/ tests/ scripts/
      continue-on-error: true

  docs:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install package with docs dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install sphinx sphinx-rtd-theme
        pip install -e .
    
    - name: Test documentation build
      run: |
        cd docs
        # Would run: sphinx-build -b html . _build/html
        # For now just check files exist
        ls -la
      continue-on-error: true